version: "3"
services:
  php:
    build:
      # the compiled docker image
      #      context: ./serve/php/completed
      context: ./serve/php
    container_name: php
    volumes:
      - ${WWW_DIR}:/www:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
    restart: always
    ports:
      - "9000:9000"
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php8:
    build:
      context: ./serve/php8
    container_name: php8
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  nginx:
    build:
      context: ./serve/nginx
    container_name: nginx
    volumes:
      - ${WWW_DIR}:/www/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ./serve/nginx/index.html:/usr/share/nginx/html/index.html:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
    restart: always
    ports:
      - "${NGINX_DEFAULT_PORT}:443"
    networks:
      - default

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL5_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
      TZ: "$TZ"

  #Portainer simplifies container management in both Swarm and Kubernetes environments. It's used by software engineers and DevOps teams to simplify and speed up software deployments.
  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - "81:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data

  #Netdata is distributed, real-time performance and health monitoring for systems and applications. It is a highly-optimized monitoring agent you install on all your systems and containers.
  netdata:
    build:
      context: ./serve/netdata
    container_name: netdata
    restart: always
    ports:
      - 19999:19999
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE